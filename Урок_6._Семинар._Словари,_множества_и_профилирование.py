# Задача 1.

# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# На вход подается 2 числа через пробел: n m
  #   n - кол-во элементов первого множества.
   #  m - кол-во элементов второго множества.
# Затем подаются элементы каждого множества через пробел в виде строки. !
# Писать input() не надо!

# Решение:

# var1 = '5 4' 
# var2 = '1 3 5 7 9' 
# var3 = '2 3 4 5' 

# Введите ваше решение ниже

varlist_2 = var2.split(' ')
varlist_2 = set(varlist_2)
varlist_3 = var3.split(' ')
varlist_3 = set(varlist_3)

uni = varlist_2.intersection(varlist_3)
uni_list = list(uni)
uni_list.sort()

print(*uni_list)


# Задача 2.

# В фермерском хозяйстве в Карелии выращивают чернику. Черника растет на круглой грядке, и кусты черники высажены по окружности грядки. Каждый куст черники имеет урожайность, которая соответствует количеству ягод на этом кусте.

# Урожайность черничных кустов представлена в виде списка arr, где arr[i] - это урожайность (количество ягод) i-го куста.

# В фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Каждый собирающий модуль может собрать ягоды с одного куста и с двух соседних кустов. Собирающий модуль находится перед определенным кустом, и он может выбирать, с какого куста начать сбор ягод.

# Ваша задача - написать программу, которая определит максимальное число ягод, которое может собрать один собирающий модуль за один заход, находясь перед некоторым кустом грядки.

# Входные данные:

# На вход программе подается список arr, где arr[i] (1 ≤ arr[i] ≤ 1000) - урожайность i-го куста черники. Размер списка не превышает 1000 элементов.

# Выходные данные:

# Программа должна вывести одно целое число - максимальное количество ягод, которое может собрать собирающий модуль, находясь перед некоторым кустом грядки.


# Решение:

# arr = [5, 8, 6, 4, 9, 2, 7, 3]

# Введите ваше решение ниже

n = len(arr)
max_pickup = 0

for i in range(n):
    pickup = arr[i] + arr[(i-1) % n] + arr[(i+1) % n]
    if pickup > max_pickup:
        max_pickup = pickup

print(max_pickup)
